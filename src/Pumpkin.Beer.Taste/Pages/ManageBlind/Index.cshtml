@page
@model Pumpkin.Beer.Taste.Pages.BlindPages.IndexModel
@{
    ViewData["Title"] = "All Blinds";
}

<style>
    .card-img-top {
        max-height: 200px;
        object-fit: cover;
    }

    .qr-code {
        width: 100%;
        height: auto;
        max-width: 300pt;
    }
</style>

<page-heading heading="Manage Tastings">
    <a asp-page="Create">Create New</a>
</page-heading>

@if (Model.Blinds?.Any() ?? false)
{
    <div x-data="blindData" class="d-flex gap-4 flex-wrap justify-content-center">
        @foreach (var item in Model.Blinds)
        {
            <div class="card border-primary mb-3" style="width: 23rem;">
                @if (item.CoverPhotoBase64 is not null)
                {
                    <img src="data:image/jpeg;base64,@item.CoverPhotoBase64" class="card-img-top rounded-top" alt="Cover Photo" />
                }
                <div class="card-body">
                    <h3 class="card-title">
                        Name: @Html.DisplayFor(modelItem => item.Name)
                    </h3>
                    <h4 class="card-subtitle mb-2 text-muted">
                        Invite Code: <span class="text-warning">@Html.DisplayFor(modelItem => item.InviteCode)</span>
                    </h4>

                    <p class="mb-1"><strong>Starts:</strong> <span title="@item.Started.ToString()">@item.Started.Humanize(true, Model.CurrentUserLocalTimeAsUtcByProfileTimeZone)</span></p>
                    <p class="mb-1"><strong>Closes:</strong> <span title="@item.Closed.ToString()">@item.Closed.Humanize(true, Model.CurrentUserLocalTimeAsUtcByProfileTimeZone)</span></p>
                    <p class="mb-1"><strong>Starts in Time Zone:</strong> <span>@item.StartsAndClosesIANATimeZoneId</span></p>
                    <p class="mb-1"><strong>Member Count:</strong> <span>@item.NumMembers</span></p>
                    <p class="mb-1"><strong>Items Count:</strong> <span>@item.NumItems</span></p>
                    <p class="mb-3"><strong>Votes Count:</strong> <span>@item.NumVotes</span></p>

                    <div class="d-flex gap-2">
                        <div>
                            @if (item.NumVotes == 0)
                            {
                                <a asp-page="./Edit" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm">Edit</a>
                                <a asp-page="./Delete" asp-route-id="@item.Id" class="btn btn-outline-danger btn-sm">Delete</a>
                                if (item.IsOpen)
                                {
                                    <a asp-page="./Close" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">Close Now</a>
                                }
                            }
                            else if (item.IsOpen)
                            {
                                <a asp-page="./Close" asp-route-id="@item.Id" class="btn btn-outline-warning btn-sm">Close</a>
                            }
                            else
                            {
                                <a asp-area="" asp-page="/Scores/Index" asp-route-id="@item.Id" class="btn btn-outline-info btn-sm">View Scores</a>
                            }

                            @if (item.IsOpen)
                            {
                                <div class="mt-3">
                                    <img class="qr-code" src="data:image/png;base64,@item.QRCodeBase64" alt="QR Code" />
                                </div>

                                <div class="mt-3">
                                    <button @@click="copyInvite('@item.JoinAndVoteLink', @item.Id)"
                                            class="btn btn-outline-success btn-sm"
                                            :class="{ 'btn-success text-white': copiedId === @item.Id }">
                                        <span x-text="copiedId === @item.Id ? 'Copied!' : 'Copy Invite Link'"></span>
                                    </button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('alpine:init', () => {
            Alpine.data('blindData', () => ({
                copiedId: null,
                async copyInvite(link, id) {
                    try {
                        await navigator.clipboard.writeText(link);
                        this.copiedId = id;
                        setTimeout(() => this.copiedId = null, 2000);
                    } catch (err) {
                        console.error('Failed to copy:', err);
                    }
                }
            }));
        });
    </script>
}
