{
  "Serilog": {
    "Using": [
      "Serilog.Sinks.Grafana.Loki"
    ],
    "Enrich": [
      "FromLogContext",
      // Add full exception details using Serilog.Exceptions https://github.com/RehanSaeed/Serilog.Exceptions.
      "WithExceptionDetails",
      // Add the username and machine name to the logs using Serilog.Enrichers.Environment https://github.com/serilog/serilog-enrichers-environment.
      "WithEnvironmentUserName",
      "WithMachineName",
      // Add the process ID and name to the logs using Serilog.Enrichers.Process https://github.com/serilog/serilog-enrichers-process.
      "WithProcessId",
      "WithProcessName",
      //#if (OpenTelemetry)
      // Add open telemetry span details using Serilog.Enrichers.Span https://github.com/RehanSaeed/Serilog.Enrichers.Span
      "WithSpan",
      //#endif
      // Add the current thread ID to the logs using Serilog.Enrichers.Thread https://github.com/serilog/serilog-enrichers-thread.
      "WithThreadId"
    ],
    "WriteTo": [
      {
        "Name": "GrafanaLoki",
        "Args": {
          "uri": "http://loki:3100",
          "labels": [
            {
              "key": "app",
              "value": "PumpkinTastingWebApp"
            }
          ],
          "propertiesAsLabels": [
            "app"
          ]
        }
      }
    ],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    }
  },
  "AllowedHosts": "*",
  "sharpRepository": {
    "repositories": {
      "default": "inMemory",
      "inMemory": {
        "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository"
      },
      "inMemoryNoCaching": {
        "factory": "SharpRepository.InMemoryRepository.InMemoryConfigRepositoryFactory, SharpRepository.InMemoryRepository",
        "cachingStrategy": "none",
        "cachingProvider": "noCachingProvider"
      },
      "efCore": {
        "factory": "SharpRepository.EfCoreRepository.EfCoreConfigRepositoryFactory, SharpRepository.EfCoreRepository",
        "dbContextType": "Pumpkin.Beer.Taste.Data.ApplicationDbContext, Pumpkin.Beer.Taste",
        "cachingStrategy": "none",
        "cachingProvider": "noCachingProvider"
      }
    },
    "cachingProviders": {
      "default": "inMemoryProvider",
      "inMemoryProvider": {
        "factory": "SharpRepository.Repository.Caching.InMemoryConfigCachingProviderFactory, SharpRepository.Repository"
      },
      "noCachingProvider": {
        "factory": "SharpRepository.Repository.Caching.NoCachingConfigCachingProviderFactory, SharpRepository.Repository"
      }
    },
    "cachingStrategies": {
      "default": "standard",
      "standard": {
        "factory": "SharpRepository.Repository.Caching.StandardConfigCachingStrategyFactory, SharpRepository.Repository",
        "generational": "true",
        "writeThrough": "false"
      },
      "timeout": {
        "factory": "SharpRepository.Repository.Caching.TimeoutConfigCachingStrategyFactory, SharpRepository.Repository",
        "timeout": "200"
      },
      "none": {
        "factory": "SharpRepository.Repository.Caching.NoCachingConfigCachingStrategyFactory, SharpRepository.Repository"
      }
    }
  }
}
